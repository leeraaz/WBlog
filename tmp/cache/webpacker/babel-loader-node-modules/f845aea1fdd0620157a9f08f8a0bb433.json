{"ast":null,"code":"/* eslint no-console: 0 */\n// Run this example by adding <%= javascript_pack_tag 'hello_vue' %> (and\n// <%= stylesheet_pack_tag 'hello_vue' %> if you have styles in your component)\n// to the head of your layout file,\n// like app/views/layouts/application.html.erb.\n// All it does is render <div>Hello Vue</div> at the bottom of the page.\nimport Vue from 'vue';\nimport App from '../app.vue';\nconsole.log('[i] Starting client app');\nVue.config.productionTip = false;\nnew Vue({\n  render: function render(h) {\n    return h(App);\n  },\n  store: store,\n  router: router,\n  components: {\n    App: App\n  }\n}).$mount('#app');\nnew Vue({\n  el: '#app',\n  data: {\n    message: \"hello how are you?\"\n  }\n});\ndocument.addEventListener('turbolinks:load', function () {\n  var app = new Vue({\n    render: function render(h) {\n      return h(App);\n    }\n  }).$mount();\n  document.body.appendChild(app.$el);\n  console.log(app);\n}); // The above code uses Vue without the compiler, which means you cannot\n// use Vue to target elements in your existing html templates. You would\n// need to always use single file components.\n// To be able to target elements in your existing html/erb templates,\n// comment out the above code and uncomment the below\n// Add <%= javascript_pack_tag 'hello_vue' %> to your layout\n// Then add this markup to your html template:\n//\n// <div id='hello'>\n//   {{message}}\n//   <app></app>\n// </div>\n// import Vue from 'vue/dist/vue.esm'\n// import App from '../app.vue'\n//\n// document.addEventListener('DOMContentLoaded', () => {\n//   const app = new Vue({\n//     el: '#hello',\n//     data: {\n//       message: \"Can you say hello?\"\n//     },\n//     components: { App }\n//   })\n// })\n//\n//\n//\n// If the project is using turbolinks, install 'vue-turbolinks':\n//\n// yarn add vue-turbolinks\n//\n// Then uncomment the code block below:\n//\n// import TurbolinksAdapter from 'vue-turbolinks'\n// import Vue from 'vue/dist/vue.esm'\n// import App from '../app.vue'\n//\n// Vue.use(TurbolinksAdapter)\n//\n// document.addEventListener('turbolinks:load', () => {\n//   const app = new Vue({\n//     el: '#hello',\n//     data: () => {\n//       return {\n//         message: \"Can you say hello?\"\n//       }\n//     },\n//     components: { App }\n//   })\n// })","map":{"version":3,"sources":["/home/banba/projects/Blog/app/javascript/packs/hello_vue.js"],"names":["Vue","App","console","log","config","productionTip","render","h","store","router","components","$mount","el","data","message","document","addEventListener","app","body","appendChild","$el"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,GAAP,MAAgB,YAAhB;AAEAC,OAAO,CAACC,GAAR,CAAY,yBAAZ;AAEAH,GAAG,CAACI,MAAJ,CAAWC,aAAX,GAA2B,KAA3B;AAEA,IAAIL,GAAJ,CAAQ;AACNM,EAAAA,MAAM,EAAE,gBAAAC,CAAC;AAAA,WAAIA,CAAC,CAACN,GAAD,CAAL;AAAA,GADH;AAENO,EAAAA,KAAK,EAALA,KAFM;AAGNC,EAAAA,MAAM,EAANA,MAHM;AAINC,EAAAA,UAAU,EAAE;AAAET,IAAAA,GAAG,EAAHA;AAAF;AAJN,CAAR,EAKGU,MALH,CAKU,MALV;AASA,IAAIX,GAAJ,CAAQ;AACJY,EAAAA,EAAE,EAAE,MADA;AAEPC,EAAAA,IAAI,EAAE;AACLC,IAAAA,OAAO,EAAE;AADJ;AAFC,CAAR;AAOAC,QAAQ,CAACC,gBAAT,CAA0B,iBAA1B,EAA6C,YAAM;AACjD,MAAMC,GAAG,GAAG,IAAIjB,GAAJ,CAAQ;AAClBM,IAAAA,MAAM,EAAE,gBAAAC,CAAC;AAAA,aAAIA,CAAC,CAACN,GAAD,CAAL;AAAA;AADS,GAAR,EAETU,MAFS,EAAZ;AAGAI,EAAAA,QAAQ,CAACG,IAAT,CAAcC,WAAd,CAA0BF,GAAG,CAACG,GAA9B;AAEAlB,EAAAA,OAAO,CAACC,GAAR,CAAYc,GAAZ;AACD,CAPD,E,CASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["/* eslint no-console: 0 */\n// Run this example by adding <%= javascript_pack_tag 'hello_vue' %> (and\n// <%= stylesheet_pack_tag 'hello_vue' %> if you have styles in your component)\n// to the head of your layout file,\n// like app/views/layouts/application.html.erb.\n// All it does is render <div>Hello Vue</div> at the bottom of the page.\n\nimport Vue from 'vue'\nimport App from '../app.vue'\n\nconsole.log('[i] Starting client app')\n\nVue.config.productionTip = false\n\nnew Vue({\n  render: h => h(App),\n  store,\n  router,\n  components: { App }\n}).$mount('#app')\n\n\n\nnew Vue({\n    el: '#app',\n\tdata: {\n\t\tmessage: \"hello how are you?\"\n\t}\n})\n\ndocument.addEventListener('turbolinks:load', () => {\n  const app = new Vue({\n    render: h => h(App)\n  }).$mount()\n  document.body.appendChild(app.$el)\n\n  console.log(app)\n})\n\n// The above code uses Vue without the compiler, which means you cannot\n// use Vue to target elements in your existing html templates. You would\n// need to always use single file components.\n// To be able to target elements in your existing html/erb templates,\n// comment out the above code and uncomment the below\n// Add <%= javascript_pack_tag 'hello_vue' %> to your layout\n// Then add this markup to your html template:\n//\n// <div id='hello'>\n//   {{message}}\n//   <app></app>\n// </div>\n\n\n// import Vue from 'vue/dist/vue.esm'\n// import App from '../app.vue'\n//\n// document.addEventListener('DOMContentLoaded', () => {\n//   const app = new Vue({\n//     el: '#hello',\n//     data: {\n//       message: \"Can you say hello?\"\n//     },\n//     components: { App }\n//   })\n// })\n//\n//\n//\n// If the project is using turbolinks, install 'vue-turbolinks':\n//\n// yarn add vue-turbolinks\n//\n// Then uncomment the code block below:\n//\n// import TurbolinksAdapter from 'vue-turbolinks'\n// import Vue from 'vue/dist/vue.esm'\n// import App from '../app.vue'\n//\n// Vue.use(TurbolinksAdapter)\n//\n// document.addEventListener('turbolinks:load', () => {\n//   const app = new Vue({\n//     el: '#hello',\n//     data: () => {\n//       return {\n//         message: \"Can you say hello?\"\n//       }\n//     },\n//     components: { App }\n//   })\n// })\n"]},"metadata":{},"sourceType":"module"}